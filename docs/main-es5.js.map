{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","environment","production","_","loadServiceWorker","err","console","error","navigator","wb","addEventListener","event","isUpdate","log","messageSW","type","register"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'MyApp';\n}\n","<h1>Angular Workbox sample app</h1>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from \"@angular/core\";\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport { Workbox } from \"workbox-window\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { environment } from \"./environments/environment\";\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .then((_) => loadServiceWorker())\n  .catch((err) => console.error(err));\n\nfunction loadServiceWorker() {\n  if (\"serviceWorker\" in navigator) {\n    const wb = new Workbox(\"service-worker.js\");\n    wb.addEventListener(\"activated\", async (event) => {\n      if (!event.isUpdate) {\n        console.log(\"Service worker activated for the first time\");\n      } else {\n        console.log(\"Service worker activated\");\n      }\n    });\n\n    wb.addEventListener(\"waiting\", (event) => {\n      wb.messageSW({ type: \"SKIP_WAITING\" });\n    });\n\n    wb.addEventListener(\"installed\", (event) => {\n      if (!event.isUpdate) {\n        console.log(\"Service worker installed for the first time\");\n      } else {\n        console.log(\"Service worker installed\");\n      }\n    });\n\n    wb.register();\n  }\n}\n"]}